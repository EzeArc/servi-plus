---

---

<form
  class="max-w-sm mx-auto"
  id="registerProviderForm"
  method="POST"
  enctype="multipart/form-data"
  action="http://localhost:8080/api/auth/registerProvider"
>
  <div class="mb-5">
    <label
      for="mail"
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      >Your email</label
    >
    <input
      type="email"
      id="mail"
      name="mail"
      required
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
      placeholder="name@flowbite.com"
    />
  </div>
  <div class="mb-5">
    <label
      for="name"
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      >Your name</label
    >
    <input
      name="name"
      type="text"
      id="name"
      required
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
      placeholder="name"
    />
  </div>
  <div class="mb-5">
    <label
      for="phone"
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      >Your phone</label
    >
    <input
      name="phone"
      type="tel"
      id="phone"
      required
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
      placeholder="22145647"
    />
  </div>
  <div class="mb-5">
    <label
      for="address"
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      >Your address</label
    >
    <input
      name="address"
      type="text"
      id="address"
      required
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
      placeholder="Bs As"
    />
  </div>
  <div class="mb-5">
    <label
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      for="file">Upload file</label
    >
    <input
      class="block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400"
      aria-describedby="image_help"
      id="file"
      type="file"
      name="file"
    />
  </div>
  <div class="mb-5">
    <label
      for="salary"
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      >Your salary</label
    >
    <input
      name="salary"
      type="number"
      id="salary"
      required
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
      placeholder="$3000"
    />
  </div>
  <div class="mb-5">
    <label
      for="category"
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      >Your category</label
    >
    <select
      name="category"
      id="category"
      required
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
    ></select>
  </div>
  <div class="mb-5">
    <label
      for="password"
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      >Your password</label
    >
    <input
      name="password"
      type="password"
      id="password"
      required
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
      required
    />
  </div>
  <div class="flex items-start mb-5">
    <div class="flex items-center h-5">
      <input
        id="remember"
        type="checkbox"
        value=""
        class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800"
        required
      />
    </div>
    <label
      for="remember"
      class="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300"
      >Remember me</label
    >
  </div>
  <button
    type="submit"
    value="Registrarse"
    class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
    >Registrarse</button
  >
</form>

<script>
  import AuthService from "../api/services/auth.js";
  import apiRoutes from "../api.js";

  const authService = new AuthService();

  // Define la lógica para obtener las categorías
  async function getCategories() {
    const response = await fetch(`${apiRoutes.serviPlus}/categories`);
    return response.json();
  }

  // Llena el elemento select con las categorías
  async function fillCategorySelect() {
    const select = document.getElementById("category");
    const categories = await getCategories();

    for (const category of categories) {
      const option = document.createElement("option");
      option.value = category.id;
      option.text = category.name;
      select.appendChild(option);
    }
  }

  // Llama a la función cuando la página se carga
  window.onload = fillCategorySelect;

  document
    .getElementById("registerProviderForm")
    .addEventListener("submit", async function (event) {
      try {
        event.preventDefault();

        // Obtén los datos del formulario usando el objeto data
        const data = {
          mail:
            (document.getElementById("mail") as HTMLInputElement)?.value || "",
          name:
            (document.getElementById("name") as HTMLInputElement)?.value || "",
          phone:
            (document.getElementById("phone") as HTMLInputElement)?.value || "",
          address:
            (document.getElementById("address") as HTMLInputElement)?.value ||
            "",
          file: (document.getElementById("file") as HTMLInputElement).files[0],
          salary:
            (document.getElementById("salary") as HTMLInputElement)?.value ||
            "",
          category:
            (document.getElementById("category") as HTMLSelectElement)?.value ||
            "",
          password:
            (document.getElementById("password") as HTMLInputElement)?.value ||
            "",
          // Agrega otros campos según sea necesario
        };

        console.log("Data:", data); // Agrega esta línea para imprimir los valores

        // Verifica que los elementos requeridos no estén vacíos
        if (Object.values(data).some((value) => !value)) {
          console.log("Todos los campos son obligatorios");
          return;
        }

        const headers = { "Content-Type": "multipart/form-data" };

        // Crea un objeto FormData y agrega manualmente cada campo
        const formData = new FormData();
        formData.append("mail", data.mail);
        formData.append("name", data.name);
        formData.append("phone", data.phone);
        formData.append("address", data.address);
        formData.append("file", data.file);
        formData.append("salary", data.salary);
        formData.append("category", data.category);
        formData.append("password", data.password);
        // Agrega otros campos según sea necesario

        // Envía los datos del formulario
        const response = await authService.registerProvider(formData, headers);
        console.log(formData);
        console.log(headers);
        if (response) {
          console.log("Registro exitoso");
        } else {
          console.log("Error en el registro");
          console.log(response);
        }
      } catch (error) {
        console.error("Error:", error);
      }
    });
</script>
